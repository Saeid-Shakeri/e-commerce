# name: Django CI

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:

#     runs-on: ubuntu-latest
#     strategy:
#       max-parallel: 4
#       matrix:
#         python-version: [3.10.11]

#     steps:
#     - uses: actions/checkout@v4
#     - name: List directory contents (for debugging)
#       run: ls -R
#     - name: Set up Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v3
#       with:
#         python-version: ${{ matrix.python-version }}
#     - name: Install Dependencies
#       run: |
#         cd ./user
#         python -m pip install --upgrade pip
#         pip install -r requirements.txt
#     - name: Run Tests
#       run: |
#         cd ./user
#         python manage.py test 


# name: Deploy to Kubernetes

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v2

#     - name: Cache Docker layers
#       uses: actions/cache@v2
#       with:
#         path: ~/.cache/docker
#         key: ${{ runner.os }}-docker-${{ github.sha }}
#         restore-keys: |
#           ${{ runner.os }}-docker-

#     - name: Build Docker image
#       run: |
#         docker build -t mrsaeidshakeri/user-service:1.0 .
    
#     - name: Log in to Docker Hub
#       uses: docker/login-action@v2
#       with:
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_PASSWORD }}
    
#     - name: Push Docker image to Docker Hub
#       run: |
#         docker push mrsaeidshakeri/user-service:latest

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build

#     steps:
#     - name: Set up kubectl
#       uses: actions/setup-kubectl@v2
#       with:
#         kubeconfig: ${{ secrets.KUBECONFIG }}

#     - name: Apply Kubernetes manifests
#       run: |
#         cd ./user
#         kubectl apply -f user-service.yaml



name: Django CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10.11]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: List directory contents (for debugging)
      run: ls -R

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        cd ./user
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Tests
      run: |
        cd ./user
        python manage.py test

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: ~/.cache/docker
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-

    - name: Build Docker image
      run: |
        docker build -t mrsaeidshakeri/user-service:latest .

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image to Docker Hub
      run: |
        docker push mrsaeidshakeri/user-service:latest

    - name: Set up kubectl
      uses: actions/setup-kubectl@v2
      with:
        kubeconfig: ${{ secrets.KUBECONFIG }}

    - name: Apply Kubernetes manifests
      run: |
        cd ./user
        kubectl apply -f user-service.yaml
